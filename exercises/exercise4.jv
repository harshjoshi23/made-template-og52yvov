pipeline MowestaDataPipeline {

    // Pipeline for Mowesta Dataset Extraction

    HttpFetcher->UnzipContent->SelectCSV->ReadTextFile
    ->ParseCSV->HeaderSetup->LastHeaderSetup->ParseTable
    ->ConvertTempCelsiusToFahrenheit->ConvertBatteryTempCelsiusToFahrenheit
    ->LoadToSQLite;


    block HttpFetcher oftype HttpExtractor { 
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }
    
    block UnzipContent oftype ArchiveInterpreter {
        archiveType: "zip";
    }
    
    block SelectCSV oftype FilePicker {
        path: "./data.csv";
    }

    block ReadTextFile oftype TextFileInterpreter { }
    
    block ParseCSV oftype CSVInterpreter  {
        delimiter : ';';
    }

    block HeaderSetup oftype CellWriter {
        at: range A1:E1;
        write: ["id", "producer", "model", "month", "temperature"];
    }

    block LastHeaderSetup oftype CellWriter {
        at: cell J1;
        write: ["battery_temperature"];
    }

    block ParseTable oftype TableInterpreter { 
        header: true;
        columns: [
            "id" oftype valid_id,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype valid_month,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }
    
    valuetype valid_month oftype integer {
        constraints: [ monthRangeConstraint ];
    }
    constraint monthRangeConstraint on integer :
        value > 0 and value <= 12;

    valuetype valid_id oftype integer {
        constraints: [ idRangeConstraint ];
    }
    constraint idRangeConstraint on integer :
        value > 0;
    
    block ConvertTempCelsiusToFahrenheit oftype TableTransformer {
        inputColumns: ['temperature'];
        outputColumn: 'temperature';
        uses: CelsiusToFahrenheitConverter;
    }
    transform CelsiusToFahrenheitConverter {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block ConvertBatteryTempCelsiusToFahrenheit oftype TableTransformer {
        inputColumns: ['battery_temperature'];
        outputColumn: 'battery_temperature';
        uses: BatteryTempCelsiusToFahrenheitConverter;
    }
    transform BatteryTempCelsiusToFahrenheitConverter {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block LoadToSQLite oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }
    
}
